# parameters
#nc: 80  # number of classes
#nc: 1  # SSDD数据集的类别数
#nc: 4  # MSAR-1.0数据集的类别数
nc: 1  # SAR-Ship-Dataset数据集的类别数
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [12,16, 19,36, 40,28]  # P3/8
  - [36,75, 76,55, 72,146]  # P4/16
  - [142,110, 192,243, 459,401]  # P5/32

# yolov7 backbone
backbone:
  # [from, number, module, args]
  # 3个卷积+标准化+激活函数
  [[-1, 1, Conv, [32, 3, 1]],  # 0      640, 640, 3 -> 640, 640, 32
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2 640, 640, 32 -> 320, 320, 64
   [-1, 1, Conv, [64, 3, 1]],         # 320, 320, 64 -> 320, 320, 64

   # 卷积标准化激活+Multi_Concat_Block
   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4  320, 320, 64 -> 160, 160, 128
   # -----------------------------------------------------------------#
   [-1, 1, Conv, [64, 1, 1]],  # 160, 160, 128 -> 160, 160, 64  concat
   [-2, 1, Conv, [64, 1, 1]],  # 160, 160, 128 -> 160, 160, 64  concat
   [-1, 1, Conv, [64, 3, 1]],  # 160, 160, 64 -> 160, 160, 64
   [-1, 1, Conv, [64, 3, 1]],  # 160, 160, 64 -> 160, 160, 64   concat
   [-1, 1, Conv, [64, 3, 1]],  # 160, 160, 64 -> 160, 160, 64
   [-1, 1, Conv, [64, 3, 1]],  # 160, 160, 64 -> 160, 160, 64   concat
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 160, 160, 256
   [-1, 1, Conv, [256, 1, 1]],  # 11  160, 160, 256 -> 160, 160, 256

   # Transition_Block+Multi_Concat_Block
   [-1, 1, MP, []],  # 160, 160, 256 -> 80, 80, 256
   [-1, 1, Conv, [128, 1, 1]],  # 80, 80, 256 -> 80, 80, 128  concat
   [-3, 1, Conv, [128, 1, 1]],  # 160, 160, 256 -> 160, 160, 128
   [-1, 1, Conv, [128, 3, 2]],  # 160, 160, 128 -> 80, 80, 128  concat
   [[-1, -3], 1, Concat, [1]],  # 16-P3/8  80, 80, 256
   # -----------------------------------------------------------------#
   [-1, 1, Conv, [128, 1, 1]],  # 80, 80, 256 -> 80, 80, 128  concat
   [-2, 1, Conv, [128, 1, 1]],  # 80, 80, 256 -> 80, 80, 128  concat
   [-1, 1, Conv, [128, 3, 1]],  # 80, 80, 128 -> 80, 80, 128
   [-1, 1, Conv, [128, 3, 1]],  # 80, 80, 128 -> 80, 80, 128  concat
   [-1, 1, Conv, [128, 3, 1]],  # 80, 80, 128 -> 80, 80, 128
   [-1, 1, Conv, [128, 3, 1]],  # 80, 80, 128 -> 80, 80, 128  concat
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 80, 80, 512
   [-1, 1, Conv, [512, 1, 1]],  # 24  # 80, 80, 512 -> 80, 80, 512(是一个有效特征层)

   # Transition_Block+Multi_Concat_Block
   [-1, 1, MP, []],  # 80, 80, 512 -> 40, 40, 512
   [-1, 1, Conv, [256, 1, 1]],  # 40, 40, 512 -> 40, 40, 256  concat
   [-3, 1, Conv, [256, 1, 1]],  # 80, 80, 512 -> 80, 80, 256
   [-1, 1, Conv, [256, 3, 2]],  # 80, 80, 256 -> 40, 40, 256  concat
   [[-1, -3], 1, Concat, [1]],  # 29-P4/16  40, 40, 512
   # -----------------------------------------------------------------#
   [-1, 1, Conv, [256, 1, 1]],  # 40, 40, 512 -> 40, 40, 256  concat
   [-2, 1, Conv, [256, 1, 1]],  # 40, 40, 512 -> 40, 40, 256  concat
   [-1, 1, Conv, [256, 3, 1]],  # 40, 40, 256 -> 40, 40, 256
   [-1, 1, Conv, [256, 3, 1]],  # 40, 40, 256 -> 40, 40, 256  concat
   [-1, 1, Conv, [256, 3, 1]],  # 40, 40, 256 -> 40, 40, 256
   [-1, 1, Conv, [256, 3, 1]],  # 40, 40, 256 -> 40, 40, 256  concat
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 40, 40, 1024
   [-1, 1, Conv, [1024, 1, 1]],  # 37  # 40, 40, 1024 -> 40, 40, 1024(是一个有效特征层)

   # Transition_Block+Multi_Concat_Block
   [-1, 1, MP, []],  # 40, 40, 1024 -> 20, 20, 1024
   [-1, 1, Conv, [512, 1, 1]],  # 20, 20, 1024 -> 20, 20, 512  concat
   [-3, 1, Conv, [512, 1, 1]],  # 40, 40, 1024 -> 40, 40, 512
   [-1, 1, Conv, [512, 3, 2]],  # 40, 40, 512 -> 20, 20, 512  concat
   [[-1, -3], 1, Concat, [1]],  # 42-P5/32  20, 20, 1024
   # -----------------------------------------------------------------#
   [-1, 1, Conv, [256, 1, 1]],  # 20, 20, 1024 -> 20, 20, 256  concat
   [-2, 1, Conv, [256, 1, 1]],  # 20, 20, 1024 -> 20, 20, 256  concat
   [-1, 1, Conv, [256, 3, 1]],  # 20, 20, 256 -> 20, 20, 256
   [-1, 1, Conv, [256, 3, 1]],  # 20, 20, 256 -> 20, 20, 256  concat
   [-1, 1, Conv, [256, 3, 1]],  # 20, 20, 256 -> 20, 20, 256
   [-1, 1, Conv, [256, 3, 1]],  # 20, 20, 256 -> 20, 20, 256  concat
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 20, 20, 1024
   [-1, 1, Conv, [1024, 1, 1]],  # 50  20, 20, 1024 -> 20, 20, 1024(是一个有效特征层)
  ]

# yolov7 head
head:
  [[-1, 1, SPPCSPC, [512]], # 51  # 20, 20, 1024 -> 20, 20, 512

   [-1, 1, Conv, [256, 1, 1]],  # 20, 20, 512 -> 20, 20, 256
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 20, 20, 256 -> 40, 40, 256
   [37, 1, Conv, [256, 1, 1]], # route backbone P4  40, 40, 1024 -> 40, 40, 256
   [[-1, -2], 1, Concat, [1]],  # 40, 40, 256 + 40, 40, 256 -> 40, 40, 512 (Inputs)

   [-1, 1, Conv, [256, 1, 1]],  # 40, 40, 512 -> 40, 40, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  # 40, 40, 256 -> 40, 40, 256  concat
   [-3, 1, Conv, [256, 1, 1]],  # 40, 40, 512 -> 40, 40, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  # 40, 40, 256 -> 40, 40, 256  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 256 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 40, 40, 128 -> 40, 40, 128  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 128 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 40, 40, 128 -> 40, 40, 128  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 128 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 40, 40, 128 -> 40, 40, 128  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 128 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 40, 40, 128 -> 40, 40, 128  concat
   [[-1, -3, -5, -7, -9, -11], 1, Concat, [1]],  # 40, 40, 1024
   [-1, 1, Conv, [256, 1, 1]], # 69  40, 40, 1024 -> 40, 40, 256

   [-1, 1, Conv, [128, 1, 1]],  # 40, 40, 256 -> 40, 40, 128
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 40, 40, 128 -> 80, 80, 128
   [24, 1, Conv, [128, 1, 1]], # route backbone P3  80, 80, 512 -> 80, 80, 128
   [[-1, -2], 1, Concat, [1]],  # 80, 80, 128 + 80, 80, 128 -> 80, 80, 256 (Inputs)

   [-1, 1, Conv, [128, 1, 1]],  # 80, 80, 256 -> 80, 80, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 80, 80, 128 -> 80, 80, 128  concat
   [-3, 1, Conv, [128, 1, 1]],  # 80, 80, 256 -> 80, 80, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 80, 80, 128 -> 80, 80, 128  concat
   [-2, 1, Conv, [64, 3, 1]],  # 80, 80, 128 -> 80, 80, 64
   [-1, 1, Shrinkage_CW, [[64], [1, 1]]],  # 80, 80, 64 -> 80, 80, 64  concat
   [-2, 1, Conv, [64, 3, 1]],  # 80, 80, 64 -> 80, 80, 64
   [-1, 1, Shrinkage_CW, [[64], [1, 1]]],  # 80, 80, 64 -> 80, 80, 64  concat
   [-2, 1, Conv, [64, 3, 1]],  # 80, 80, 64 -> 80, 80, 64
   [-1, 1, Shrinkage_CW, [[64], [1, 1]]],  # 80, 80, 64 -> 80, 80, 64  concat
   [-2, 1, Conv, [64, 3, 1]],  # 80, 80, 64 -> 80, 80, 64
   [-1, 1, Shrinkage_CW, [[64], [1, 1]]],  # 80, 80, 64 -> 80, 80, 64  concat
   [[-1, -3, -5, -7, -9, -11], 1, Concat, [1]],  # 80, 80, 512
   [-1, 1, Conv, [128, 1, 1]], # 87   80, 80, 512 -> 80, 80, 128

   [-1, 1, MP, []],  # 80, 80, 128 -> 40, 40, 128
   [-1, 1, Conv, [128, 1, 1]],  # 40, 40, 128 -> 40, 40, 128   concat
   [-3, 1, Conv, [128, 1, 1]],  # 80, 80, 128 -> 80, 80, 128
   [-1, 1, Conv, [128, 3, 2]],  # 80, 80, 128 -> 40, 40, 128   concat
   [[-1, -3, 69], 1, Concat, [1]],  # 40, 40, 128 + 40, 40, 128 + 40, 40, 256-> 40, 40, 512 (Inputs)

   [-1, 1, Conv, [256, 1, 1]],  # 40, 40, 512 -> 40, 40, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  # 40, 40, 256 -> 40, 40, 256  concat
   [-3, 1, Conv, [256, 1, 1]],  # 40, 40, 512 -> 40, 40, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  # 40, 40, 256 -> 40, 40, 256  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 256 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 40, 40, 128 -> 40, 40, 128  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 128 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  #  40, 40, 128 -> 40, 40, 128  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 128 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 40, 40, 128 -> 40, 40, 128  concat
   [-2, 1, Conv, [128, 3, 1]],  # 40, 40, 128 -> 40, 40, 128
   [-1, 1, Shrinkage_CW, [[128], [1, 1]]],  # 40, 40, 128 -> 40, 40, 128  concat
   [[-1, -3, -5, -7, -9, -11], 1, Concat, [1]],  # 40, 40, 1024
   [-1, 1, Conv, [256, 1, 1]], # 106  40, 40, 1024 -> 40, 40, 256

   [-1, 1, MP, []],  # 40, 40, 256 -> 20, 20, 256
   [-1, 1, Conv, [256, 1, 1]],  # 20, 20, 256 -> 20, 20, 256   concat
   [-3, 1, Conv, [256, 1, 1]],  # 40, 40, 256 -> 40, 40, 256
   [-1, 1, Conv, [256, 3, 2]],  # 40, 40, 256 -> 20, 20, 256  concat
   [[-1, -3, 51], 1, Concat, [1]],  # 20, 20, 256 + 20, 20, 256 + 20, 20, 512 -> 20, 20, 1024 (Inputs)

   [-1, 1, Conv, [512, 1, 1]],  # 20, 20, 1024 -> 20, 20, 512
   [-1, 1, Shrinkage_CW, [[512], [1, 1]]],  # 20, 20, 512 -> 20, 20, 512  concat
   [-3, 1, Conv, [512, 1, 1]],  # 20, 20, 1024 -> 20, 20, 512
   [-1, 1, Shrinkage_CW, [[512], [1, 1]]],  # 20, 20, 512 -> 20, 20, 512  concat
   [-2, 1, Conv, [256, 3, 1]],  # 20, 20, 512 -> 20, 20, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  #  20, 20, 256 -> 20, 20, 256  concat
   [-2, 1, Conv, [256, 3, 1]],  # 20, 20, 256 -> 20, 20, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  # 20, 20, 256 -> 20, 20, 256  concat
   [-2, 1, Conv, [256, 3, 1]],  # 20, 20, 256 -> 20, 20, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  # 20, 20, 256 -> 20, 20, 256  concat
   [-2, 1, Conv, [256, 3, 1]],  # 20, 20, 256 -> 20, 20, 256
   [-1, 1, Shrinkage_CW, [[256], [1, 1]]],  # 20, 20, 256 -> 20, 20, 256  concat
   [[-1, -3, -5, -7, -9, -11], 1, Concat, [1]],  # 20, 20, 2048
   [-1, 1, Conv, [512, 1, 1]], # 125  20, 20, 2048 -> 20, 20, 512

   [87, 1, RepConv, [256, 3, 1]],  # 80, 80, 128 -> 80, 80, 256
   [106, 1, RepConv, [512, 3, 1]],  # 40, 40, 256 -> 40, 40, 512
   [125, 1, RepConv, [1024, 3, 1]],  # 20, 20, 512 -> 20, 20, 1024

   [[126, 127, 128], 1, IDetect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]

# --------------------------------------------------#
# SSDD数据集
# 80, 80, 256 -> 80, 80, 3 * 6 (4 + 1 + 1)
# 40, 40, 512 -> 40, 40, 3 * 6
# 20, 20, 1024 -> 20, 20, 3 * 6
# MSAR-1.0数据集
# 80, 80, 256 -> 80, 80, 3 * 9 (4 + 1 + 4)
# 40, 40, 512 -> 40, 40, 3 * 9
# 20, 20, 1024 -> 20, 20, 3 * 9
# SAR-Ship-Dataset数据集
# 80, 80, 256 -> 80, 80, 3 * 6 (4 + 1 + 1)
# 40, 40, 512 -> 40, 40, 3 * 6
# 20, 20, 1024 -> 20, 20, 3 * 6
# --------------------------------------------------#